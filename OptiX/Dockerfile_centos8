FROM nvidia/cudagl:10.2-devel-centos8

SHELL ["/bin/bash", "-c"]

# env var to preserve path
env ORIGINAL_PATH="$PATH"

##########################
# Install CentOS packages
##########################

run yum update -y 
run yum groupinstall -y "Development Tools"
run yum install -y epel-release
run yum install -y \
    curl \
    gcc gcc-c++ \
    wget \
    git \
    sudo \
    vim \
    automake \
    openssl-devel \
    python3-devel \
    openssh-clients \
    mesa-libGL-devel \
    freeglut-devel \
	 ninja-build
# the ubuntu container used these
#    libglu1-mesa-dev \
#    libglew2.0 \
# which are replaced by
#    mesa-libGL-devel \
#    freeglut-devel \
run yum autoremove -y

############################
# Build directory structure
############################

# /paraview will contain the final build
# /pvbuild will contain the intermediate files
# and will be deleted at the end to reduce the space
# needed by this image

run mkdir /paraview \
 && mkdir /pvbuild \
 && mkdir /pvbuild/build \
 && mkdir /pvbuild/src \
 && mkdir /pvbuild/install 

#######################################
# CMake
# We need a recent cmake for paraview
#######################################

workdir /pvbuild/install
run wget https://github.com/Kitware/CMake/releases/download/v3.18.4/cmake-3.18.4-Linux-x86_64.tar.gz \
 && tar xvzf cmake-3.18.4-Linux-x86_64.tar.gz \
 && rm cmake-3.18.4-Linux-x86_64.tar.gz \
 && mv cmake-3.18.4-Linux-x86_64 cmake

# add cmake binaries to the path
env PATH="/pvbuild/install/cmake/bin:$PATH"

#############################
# Mpich 3.2.1
#
# We build Mpich and
# then delete it. At runtime
# we will use the native MPI
# on the host system
#############################

workdir /pvbuild/src
run wget -q http://www.mpich.org/static/downloads/3.2.1/mpich-3.2.1.tar.gz \
 && tar xzf mpich-3.2.1.tar.gz \
 && rm mpich-3.2.1.tar.gz

run mkdir /pvbuild/build/mpich
workdir /pvbuild/build/mpich

# disable the addition of the RPATH to compiled executables
# this allows us to override the MPI libraries to use those
# found via LD_LIBRARY_PATH

run /pvbuild/src/mpich-3.2.1/configure --prefix=/pvbuild/install/mpich --disable-wrapper-rpath --disable-fortran
run make -j8 
run make install

# add to local environment
env PATH="/pvbuild/install/mpich/bin:$PATH"
env LD_LIBRARY_PATH="/pvbuild/install/mpich/lib:$LD_LIBRARY_PATH"

### 
# CUDA and driver library config
###
RUN ldconfig /usr/local/cuda/lib64/stubs
RUN mkdir -p /driver-libs \
 && echo /driver-libs >> /etc/ld.so.conf.d/nvidia.conf \
 && ldconfig

###
# Copy in some non-apt pre-requisites
##
COPY optix-6.5 /optix
RUN echo /optix/lib64 >> /etc/ld.so.conf.d/nvidia.conf \
 && ldconfig

COPY mdl-2019.1.1 /mdl
RUN echo /mdl/lib >> /etc/ld.so.conf.d/nvidia.conf \
 && ldconfig


###
# Download & set up some ParaView dependencies
###

# VisRTX
workdir /
RUN wget "https://www.paraview.org/files/dependencies/visrtx-v0.1.6.tar.gz" \
 && tar -xzf visrtx-v0.1.6.tar.gz \
 && mkdir /VisRTX-build && cd /VisRTX-build \
 && cmake -G Ninja \
    -D CMAKE_INSTALL_PREFIX=/visrtx \
    -D CMAKE_BUILD_TYPE=Release \
    -D OptiX_INSTALL_DIR=/optix \
    -D MDL_INSTALL_DIR=/mdl \
    -D VISRTX_BUILD_SAMPLE=OFF \
    /VisRTX-0.1.6 \
 && cd /VisRTX-build && ninja && ninja install \
 && echo /visrtx/lib >> /etc/ld.so.conf.d/nvidia.conf \
 && ldconfig

#IndeX
RUN wget "https://www.paraview.org/files/dependencies/nvidia-index-libs-5.9.20210503-linux.tar.bz2" \
 && tar -xjf nvidia-index-libs-5.9.20210503-linux.tar.bz2 \
 && mv nvidia-index-libs-5.9.20210503-linux index

######################
# ParaView Normal Build
######################

workdir /pvbuild/src
run git clone https://gitlab.kitware.com/paraview/paraview.git \
 && cd paraview \
 && git checkout v5.9.1 \
 && git submodule update --init --recursive 

RUN  \
 mkdir -p /pvbuild/build/paraview \
 && cd /pvbuild/build/paraview \
 && cmake -G Ninja \
    -D CMAKE_INSTALL_PREFIX=/paraview \
    -D CMAKE_BUILD_TYPE=Release \
    -D PARAVIEW_BUILD_SHARED_LIBS=ON \
    -D BUILD_TESTING=OFF \
    -D VTK_PYTHON_VERSION=3 \
    -D PARAVIEW_BUILD_LEGACY_SILENT=ON \
    -D PARAVIEW_USE_MPI=ON \
    -D PARAVIEW_USE_PYTHON=ON \
    -D PARAVIEW_ENABLE_CATALYST=OFF \
    -D PARAVIEW_ENABLE_EMBEDDED_DOCUMENTATION=OFF \
    -D PARAVIEW_ENABLE_WEB=ON \
    -D PARAVIEW_PLUGIN_ENABLE_pvNVIDIAIndeX=ON \
    -D PARAVIEW_ENABLE_RAYTRACING=ON \
    -D VTK_ENABLE_VISRTX=ON \
    -D VTK_ENABLE_OSPRAY=OFF \
    -D VisRTX_DIR=/visrtx \
    -D PARAVIEW_USE_QT=OFF \
    -D VTK_OPENGL_HAS_EGL=ON \
    -D VTK_USE_X=OFF \
    /pvbuild/src/paraview
RUN cd /pvbuild/build/paraview \
 && ninja && ninja install
###############################################################################


######################
# ParaView superbuild
######################

#run cd /pvbuild/src \
# && git clone --recursive https://gitlab.kitware.com/paraview/paraview-superbuild.git 

#workdir /pvbuild/src
#run cmake -LA -S /pvbuild/src/paraview-superbuild -DENABLE_nvidiaindex:BOOL=ON -DENABLE_cuda:BOOL=ON -DENABLE_egl:BOOL=ON
#run prankt
#run cmake -B /pvbuild/build/paraview -S /pvbuild/src/paraview-superbuild \
#  -DCMAKE_BUILD_TYPE_paraview=Release \
#  -DCMAKE_INSTALL_PREFIX="/paraview/" \
#  -DENABLE_cxx11=ON \
#  -Dparaview_SOURCE_SELECTION:STRING=git \
#  -Dparaview_GIT_TAG="v5.9.1" \
#  -DENABLE_zfp:BOOL=OFF \
#  -DCMAKE_BUILD_TYPE:STRING=Release \
#  -DENABLE_netcdf:BOOL=OFF \
#  -DENABLE_visitbridge:BOOL=OFF \
#  -DENABLE_ffmpeg:BOOL=OFF \
#  -DENABLE_qt5:BOOL=OFF \
#  -DENABLE_mpi:BOOL=ON \
#  -DUSE_SYSTEM_mpi:BOOL=ON \
#  -DENABLE_paraview:BOOL=ON \
#  -DENABLE_paraviewsdk:BOOL=ON \
#  -DENABLE_xdmf3:BOOL=OFF \
#  -DBUILD_SHARED_LIBS:BOOL=ON \
#  -DENABLE_vtkm:BOOL=OFF \
#  -DENABLE_python3:BOOL=ON \
#  -DUSE_SYSTEM_python3:BOOL=OFF \
#  -DENABLE_pybind11:BOOL=OFF \
#  -DENABLE_numpy:BOOL=ON \
#  -DUSE_SYSTEM_numpy:BOOL=OFF \
#  -DENABLE_scipy:BOOL=OFF \
#  -DENABLE_matplotlib:BOOL=ON \
#  -DENABLE_vrpn:BOOL=OFF \
#  -DENABLE_cosmotools:BOOL=OFF \
#  -DENABLE_osmesa:BOOL=OFF \
#  -Dmesa_USE_SWR:BOOL=ON \
#  -DENABLE_tbb:BOOL=ON \
#  -DENABLE_silo:BOOL=OFF \
#  -DENABLE_boost:BOOL=OFF \
#  -DENABLE_vortexfinder2:BOOL=OFF \
#  -DENABLE_las:BOOL=OFF \
#  -DBUILD_TESTING:BOOL=ON \
#  -DENABLE_adios2:BOOL=OFF \
#  -DENABLE_ospray:BOOL=OFF \
#  -DENABLE_ospraymodulempi:BOOL=ON \
#  -DENABLE_fontconfig:BOOL=ON \
#  -DENABLE_bzip2:BOOL=ON \
#  -DPARAVIEW_BUILD_EDITION:STRING=CATALYST_RENDERING \
#  -DSUPERBUILD_DEFAULT_INSTALL:STRING=paraviewsdk/TGZ \
#  -DPARAVIEW_EXTRA_CMAKE_ARGUMENTS="-DCMAKE_SKIP_INSTALL_RPATH=ON" \
#  -DPARAVIEW_EXTRA_CMAKE_ARGUMENTS="-DPARAVIEW_RELOCATABLE_INSTALL=OFF" \
#  -DENABLE_egl=ON \
#  -DENABLE_nvidiaindex:BOOL=OFF \
#  -DENABLE_cuda:BOOL=ON 
# No longer needed
#  -DCMAKE_CXX_COMPILER="/pvbuild/install/gcc/bin/g++" \
#  -DCMAKE_C_COMPILER="/pvbuild/install/gcc/bin/gcc" 
# Do not exist or have no counterpart
#    -D PARAVIEW_USE_RAYTRACING=ON \
#    -D VisRTX_DIR=/visrtx \
#    -D ENABLE_VISRTX=ON \

#workdir /pvbuild/build/paraview

#run make download-all 
#run make -j8
#run make install

#delete build files to save space
#this will also delete local mpich
#and we will need to make sure
#we can dynamically link with native mpi libraries
#run rm -rf /pvbuild

run rm -rf /pvbuild/src
run rm -rf /pvbuild/install/libtool
run rm -rf /pvbuild/install/cmake
run rm -rf /pvbuild/install/gcc/bin /pvbuild/install/gcc/include \
           /pvbuild/install/gcc/lib /pvbuild/install/gcc/libexec \
           /pvbuild/install/gcc/share
run rm -rf /pvbuild/build/gcc /pvbuild/build/mpich /pvbuild/build/libtool
# keep only install directory
run cd /pvbuild/build/paraview ; rm -rf [!i]*
run rm -rf /pvbuild/install/mpich

env LD_LIBRARY_PATH="/pvbuild/install/gcc/lib64"
env PATH="$ORIGINAL_PATH"
env ORIGINAL_PATH=""

workdir /paraview/bin
